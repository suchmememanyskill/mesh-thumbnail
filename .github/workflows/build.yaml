# .github/workflows/build.yml
name: Build

on:
  push:
    branches: [main]
  workflow_call:

permissions:
  contents: read    # Required by actions/checkout@v4 to clone the repository
  id-token: write   # Required by Swatinem/rust-cache@v2 for OIDC authentication with the cache service

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: win-amd64
            target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - name: linux-amd64
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - name: macos-amd64
            target: x86_64-apple-darwin
            os: macos-latest
          - name: macos-arm64
            target: aarch64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Linux build dependencies
        if: matrix.name == 'linux-amd64'
        run: sudo apt install fontconfig libfontconfig-dev -y

      - name: Windows build dependencies
        if: matrix.name == 'win-amd64'
        run: sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "mesh-thumbnail-${{ matrix.target }}"

      - name: Build Binary
        run: cargo build --locked --release --target ${{ matrix.target }}

      - name: Rename Binary for target
        if: matrix.name != 'win-amd64'
        run: mv target/${{ matrix.target }}/release/mesh-thumbnail target/${{ matrix.target }}/release/mesh-thumbnail-${{ matrix.target }}
      # Pesky .exe suffix. There's probably a better way to do this.
      - name: Rename Binary for Windows
        if: matrix.name == 'win-amd64'
        run: mv target/${{ matrix.target }}/release/mesh-thumbnail.exe target/${{ matrix.target }}/release/mesh-thumbnail-${{ matrix.target }}.exe

      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.name}}-binary
          path: |
            target/${{ matrix.target }}/release/mesh-thumbnail-${{ matrix.target }}*
